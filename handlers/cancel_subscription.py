"""–û—Ç–º–µ–Ω–∞ –ø–æ–¥–ø–∏—Å–∫–∏"""

from aiogram import Router
from aiogram.types import Message, CallbackQuery, InlineKeyboardMarkup
from aiogram.filters import Command, StateFilter
from aiogram.fsm.state import StatesGroup, State, default_state
from aiogram.fsm.context import FSMContext

from database import UserCrud
from keyboards import get_yes_no_keyboard


router: Router = Router()


class UserStates(StatesGroup):
    cancel_subscr = State()


@router.message(Command(commands='cancel_subscr'), StateFilter(default_state))
async def cancel_subscr_command(message: Message, state: FSMContext):
    if not await UserCrud.is_user_subscribed(message.from_user.id):
        await message.answer(
            text='–£ –≤–∞—Å –Ω–µ—Ç –ø–æ–¥–ø–∏—Å–∫–∏, —á—Ç–æ–±—ã –µ–µ —É–¥–∞–ª–∏—Ç—å!\n' +
            '–û—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É - /subscribe'
        )
        return
    yes_no_kb: InlineKeyboardMarkup = get_yes_no_keyboard()
    await message.answer(
        text='–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–º–µ–Ω–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É???\n' +
        '–í–µ–¥—å –¥–µ–Ω—å–≥–∏ –í–∞–º –Ω–µ –≤–µ—Ä–Ω—É—Ç üòí',
        reply_markup=yes_no_kb
    )
    await state.set_state(state=UserStates.cancel_subscr)


@router.callback_query(
    lambda answer: answer.data in ['yes', 'no'],
    StateFilter(UserStates.cancel_subscr)
)
async def user_answer(callback: CallbackQuery, state: FSMContext):
    answer: str = callback.data
    callback.answer()
    if answer == 'no':
        await callback.message.answer(
            text='–ù—É –∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ! –ü–æ–¥–ø–∏—Å–∫–∞ —É –í–∞—Å –æ—Å—Ç–∞–µ—Ç—Å—è üòä'
        )
    else:
        await UserCrud.add_subscription(callback.from_user.id, False)
        await callback.message.answer(
            text='–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–µ –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ –æ –∫—É—Ä—Å–µ –¥–æ–ª–ª–∞—Ä–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞'
        )
    await state.clear()
